#| message: false
#| warning: false
#install.packages("sf")
#install.packages("daymetr")
#install.packages("remotes")
#remotes::install_github("ropensci/USAboundaries")
#remotes::install_github("ropensci/USAboundariesData")
library(tidyverse)
library(USAboundaries) # for US state boundaries
install.packages("USAboundaries")
#| message: false
#| warning: false
#install.packages("sf")
#install.packages("daymetr")
#install.packages("remotes")
#remotes::install_github("ropensci/USAboundaries")
#remotes::install_github("ropensci/USAboundariesData")
library(tidyverse)
library(USAboundaries) # for US state boundaries
install.packages("USA.state.boundaries")
#| message: false
#| warning: false
#install.packages("sf")
#install.packages("daymetr")
#install.packages("remotes")
#remotes::install_github("ropensci/USAboundaries")
#remotes::install_github("ropensci/USAboundariesData")
library(tidyverse)
library(USAboundaries) # for US state boundaries
library(USA.state.boundaries) # for US state boundaries
#| message: false
#| warning: false
#install.packages("sf")
#install.packages("daymetr")
#install.packages("remotes")
#remotes::install_github("ropensci/USAboundaries")
#remotes::install_github("ropensci/USAboundariesData")
library(tidyverse)
library(USA.state.boundaries) # for US state boundaries
library(sf) # for US map
library(daymetr)
install.packages("sf")
install.packages("sf")
install.packages(daymetr)
install.packages("daymetr")
install.packages(USAboundaries)
install.packages("sf")
install.packages("sf")
install.packages("daymetr")
install.packages("remotes")
install.packages("remotes")
remotes::install_github("ropensci/USAboundaries")
remotes::install_github("ropensci/USAboundariesData")
library(tidyverse)
library(USAboundaries) # for US state boundaries
library(sf) # for US map
library(daymetr)
#| message: false
#| warning: false
install.packages("sf")
install.packages("daymetr")
install.packages("remotes")
remotes::install_github("ropensci/USAboundaries")
remotes::install_github("ropensci/USAboundariesData")
library(tidyverse)
library(USAboundaries) # for US state boundaries
library(sf) # for US map
library(daymetr)
#| message: false
#| warning: false
#
# install.packages("sf")
# install.packages("daymetr")
# install.packages("remotes")
# remotes::install_github("ropensci/USAboundaries")
# remotes::install_github("ropensci/USAboundariesData")
library(tidyverse)
library(USAboundaries) # for US state boundaries
library(sf) # for US map
library(daymetr)
#| message: false
#| warning: false
#
# install.packages("sf")
# install.packages("daymetr")
# install.packages("remotes")
# remotes::install_github("ropensci/USAboundaries")
# remotes::install_github("ropensci/USAboundariesData")
library(tidyverse)
library(USAboundaries) # for US state boundaries
library(sf) # for US map
library(daymetr)
field <- read_csv("../data/fielddata.csv")
field <- read_csv("../data/fielddata.csv",
show_col_types = F)
View(field)
summary(field)
unique(field$year)
distinct(field$year)
distinct(field$year)
field |>
distinct(year)
field |>
count(distinct(year))
field |>
distinct(year) |>
summrise(count = n())
field |>
distinct(year) |>
summarise(count = n())
field |>
distinct(site) |>
summarise(count = n())
ggplot(data = field,
x = strength_gtex)+
geom_density()
ggplot(data = field,
aes(x = strength_gtex))+
geom_density()
ggplot(data = field,
aes(x = strength_gtex))+
geom_density(fill = "green")
ggplot(data = field,
aes(x = strength_gtex))+
geom_density(fill = "green",alph = 0.5)
ggplot(data = field,
aes(x = strength_gtex))+
geom_density(fill = "green",alpha = 0.5)
ggplot(data = field,
aes(x = strength_gtex))+
geom_density(fill = "green",alpha = 0.4)
ggplot(data = field,
aes(x = strength_gtex))+
geom_density(fill = "green",alpha = 0.4, color = NA)
ggplot(data = field,
aes(x = strength_gtex))+
geom_density(fill = "green3",alpha = 0.4, color = NA)
states <- USAboundaries::us_states()
View(states)
View(states[[13]][[31]])
ggplot() +
geom_sf(data = states)
states <- USAboundaries::us_states()|>
dplyr::filter(!state.abb %in% c("HI","AK","PR"))
states <- USAboundaries::us_states()|>
dplyr::filter(!state_abbr %in% c("HI","AK","PR"))
ggplot() +
geom_sf(data = states)
ggplot() +
geom_sf(data = states)+
geom_point(data = field,
aes(x = long, y = lat))
ggplot() +
geom_sf(data = states)+
geom_point(data = field,
aes(x = lon, y = lat))
help("download_daymet")
View(field)
daymet_one <- download_daymet(site = field$site[[1]])
View(daymet_one)
daymet_one <- download_daymet(site = field$site[[1]],
lat = field$site[[1]])
daymet_one <- download_daymet(site = field$site[[1]],
lat = field$lat[[1]])
daymet_one <- download_daymet(site = field$site[[1]],
lat = field$lat[[1]],
lon = field$lon[[1]],
start = field$year[[1]],
end = field$year[[1]],
simplify = T)
daymet_one |>
distinct(measurement)
daymet_one |>
pivot_wider(
names_from = measurement,
values_from = value
)
extracred <- field |>
slice(1:5)
View(extracred)
daymet_all <- field |>
slice(1:5)
daymet_all <- field |>
slice(1:5) |>
mutate(weather = pmap(list(.y = year,
.site = site,
.lat = lat,
.lon = lon
),
function(.y,.site,.lat,.lon)
download_daymet(
site = .site,
lat = .lat,
lon = .lon,
start = .y,
end = .y,
simplify = T,
silent = T
)))
View(daymet_all)
View(daymet_all[[6]][[1]])
View(daymet_all[[6]][[1]])
daymet_all <- field |>
slice(1:5) |>
mutate(weather = pmap(list(.y = year,
.site = site,
.lat = lat,
.lon = lon
),
function(.y,.site,.lat,.lon)
download_daymet(
site = .site,
lat = .lat,
lon = .lon,
start = .y,
end = .y,
simplify = T,
silent = T
)|>
rename(.year = year,
.site = site)))
View(daymet_all[[6]][[1]])
daymet_all_unnest <- daymet_all |>
unnest(weather)
View(daymet_all_unnest)
daymet_all_unnest <- daymet_all |>
unnest(weather) |>
pivot_wider(
names_from = measurement,
values_from = value
)
daymet_all_unnest <- daymet_all |>
unnest(weather) |>
pivot_wider(
names_from = measurement,
values_from = value
) |>
janitor::clean_names()
write_csv(daymet_all, "../data/fieldweatherdata.csv")
write_csv(daymet_all_unnest, "../data/fieldweatherdata.csv")
