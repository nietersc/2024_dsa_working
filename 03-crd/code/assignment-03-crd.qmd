---
title: "Assignment 3 - CRD"
author: "Chris Nieters"
editor_options:
  chunk_output_type: console
format:
  html:
    code-fold: false
    embed-resources: true
    toc: true
    number-sections: false
    theme: cerulean
---

# Introduction  
This assignment will ask you to conduct a full CRD analysis, from data import through publication ready plot.  

The different sections representing what we did in class were left in the script to provide you a scaffold to start from.  

# Instructions  
  - Move this script into the `code` subfolder of your `03_crd` project folder  
  - Move the file `wheat_nk_bamyan.csv` into the `data` folder of your `03_crd` project folder  
  - On this script, fill your name under the `title` section of the YAML  

# a) Setup  
Here is where we load the packages we will use.  
Make sure to load each package in the chunk below.  
```{r setup}
#| warning: false
#| message: false

library(tidyverse)
library(car) # for Anova function
library(broom) # for model residuals extraction
library(emmeans) # for model mean extraction
library(multcomp) # for pairwise comparison letter display
library(ggsci)

```

Now, import the data set `wheat_nk_bamyan.csv` in the chunk below.  
```{r data import}

crd_df <- read.csv("../data/wheat_nk_bamyan.csv")

```

The **objective of this study** was to assess the effect of different N and K rates on wheat yield.  

For that, a study was conducted using a completely randomized design as the experimental design with four replicates. The treatment design was a 3 N x 3 K rate factorial, for a total of 9 treatments.  


# b) EDA tables  
Use this space to conduct exploratory data analysis of the imported data, in the form of tables.  

```{r summary}

summary(crd_df)

```

```{r glimpse}

glimpse(crd_df)

```


# c) Wrangling  
Here, make sure to wrangle your data set with all needed steps. Refer back to class code if you need a refresher on what was needed.

```{r}

crd_dfw <- crd_df |>
  mutate_at(
    vars(krate_kgha,nrate_kgha,rep), as.factor)|>
  mutate(
    trt_name = paste0(nrate_kgha,"+",krate_kgha)
  )

```


# d) EDA plots  
Now, explore the wrangled data using plots.  
Make sure to explore plots showing the main effects and the interaction.

## N effects boxplot
```{r}
#| echo: false
#| fig-width: 7
#| fig-height: 3

crd_dfw|>
  ggplot(aes(x = nrate_kgha, y = yield_kgha,
             color = nrate_kgha))+
  geom_boxplot()+
  geom_jitter(alpha = 0.4)+
  theme(
    legend.position = "none"
  )+
  scale_color_npg()

```

  - This plot indicates that there is a slight response in yield from increasing N fertilizer rate from 0 to 100 kg/ha, but adding 200 kg/ha does not appear to have a strong response in increased yield.

## K effects boxplot
```{r}
#| echo: false
#| #| fig-width: 2
#| fig-height: 3

ggplot(crd_dfw, aes(x = krate_kgha, 
                    y = yield_kgha,
                    color = krate_kgha)) +
  geom_boxplot() +
  geom_jitter(alpha = 0.4) +
  theme(legend.position = "none")+
  scale_color_npg()

```

  - This plot indicates that there is an initial linear response in yield from increasing K fertilizer rate from 0 to 30 kg/ha, but adding 60 kg/ha has a less pronounced effect.

## N + K effects boxplot
```{r}
#| echo: false
#| fig-width: 8
#| fig-height: 3

crd_dfw |>
  ggplot(aes(x = nrate_kgha, y = yield_kgha,
             color = nrate_kgha,))+
  geom_boxplot()+
  geom_jitter(alpha = 0.4)+
  facet_grid(~krate_kgha)+
  theme(legend.position = "none")+
  scale_color_npg()

```

  - This plot indicates that there are not different yield responses to N application rate depending on the amount of K applied with it - but differences in yield responses to N application amount appear to be most pronounced when also applied with 30 kg/ha of K. 


## Question 1) Below each plot of this section, write a sentence explaining your visual interpretation of the plot.



# e) Statistical model  
In this section, run the appropriate model.  
Remember to set the contrast type to sum-to-zero (the default in R is set-to-zero, which is not what we want).
```{r}

# Changing to sum-to-zero contrast
options(contrast = c("contr.sum", "contr.poly"))


# Model fitting
crd_mod <- lm(yield_kgha ~ nrate_kgha*krate_kgha,
              data = crd_dfw) 

# Summary
summary(crd_mod)

```

Also, remember to specify all model terms needed for the treatment design.

   - Model terms needed for this treatment design should include N effect, K effect, and N+K interaction effect. Since we are not using RCBD design, there is no need to include a blocking term.

# f) ANOVA table  
Use this section to check the ANOVA table, ensuring you use type 3 sum-of-squares.
```{r}
#| echo: true

car::Anova(crd_mod, type = 3)

```


## Question 2) Based on the ANOVA table above, for which effect(s) in the ANOVA should you extract means and perform pair-wise comparisons? Explain why.

  - Based on the results of the ANOVA table above, the only significant effects were K application rate. There was no significant difference found based on N application rate and no interaction effect between N and K application rate. For this reason, means and pair-wise comparisons should be done on K application rate alone.

## Models for individual predictors  

### K rate model
```{r}
#model for K rate
crd_modk <- lm(yield_kgha ~ krate_kgha,
               data = crd_dfw)
#ANOVA for K rate
Anova(crd_modk, type = 3)

```
  
# g) Linear model assumptions  
Use this section to first compute your residuals, including studentdized residuals.
```{r}
#| echo: true
#| warning: false
#| message: false

#calc studentized residuals K
crd_residk <- broom::augment(crd_modk) |>
  mutate(
    .stud_resid = rstudent(crd_modk)
  )

```

## Question 3) What are the linear model assumptions that we need to check for? Create subsections (using ##) below for each of these assumptions, and write code to produce plots to check for these assumptions. For each assumption, write down your interpretation of the produced plots, and your thoughts if the assumptions hold or not.

### Assumption 1: Residual independence  
```{r }
#| echo: false
#| warning: false
#| message: false
#| fig-width: 8
#| fig-height: 3

crd_residk |>
  ggplot(aes(x = .fitted, y = .stud_resid))+
  geom_smooth()+
  geom_point(shape = 21,
             fill = "purple",
             size = 3,
             alpha = 0.7)

```
  - There appears to be no patterns visible and all residuals appear as a random cloud of data, so I would say this assumption is fulfilled.


### Assumption 2: Residual homoscedasticity
```{r }
#| echo: false
#| warning: false
#| message: false
#| fig-width: 8
#| fig-height: 3

ggplot(crd_residk, aes(x=.fitted, y=.stud_resid))+
  geom_hline(yintercept = 0, color="red")+
  geom_point(shape = 21,
             fill = "purple", 
             size = 3,
             alpha = .7)+
  geom_smooth()+
  geom_hline(yintercept = c(-3,3), color = "red")+
  theme_bw()

```
  - The distribution of the studentized residuals appears to be homoscedastic - the geom_smooth appears to have equal distance across all residuals so this assumption is also valid.


### Assumption 3: Residual normality  
```{r}
#| echo: false
#| warning: false
#| message: false
#| fig-width: 8
#| fig-height: 3

crd_residk |>
  ggplot(aes(sample = .stud_resid))+
  stat_qq()+
  stat_qq_line()+
  labs(x = "Theoretical quantile",
       y = "Sample quantile")


crd_residk |>
  ggplot(aes(x = .stud_resid))+
  geom_density(fill = "purple",
               alpha = 0.2)+
  scale_x_continuous(
    breaks = c(-3,0,3),
    limits = c(-3,3)
  )+
  theme_minimal()

```
  - The QQ plot shows residuals tracking closely with the theoretical distribution line of residuals and the density plot also shows a normal distribution of the residuals so this assumption is also being met. 


### Assumption 4: Residual outliers  
```{r}
#| echo: false
#| warning: false
#| message: false
#| fig-width: 8
#| fig-height: 3

ggplot(crd_residk, aes(x=.fitted, y=.stud_resid))+
  geom_hline(yintercept = 0, color="red")+
  geom_point(shape = 21,
             fill = "purple", 
             size = 3,
             alpha = .7)+
  geom_smooth()+
  geom_hline(yintercept = c(-3,3), color = "red")+
  theme_bw()

```
  - All residuals are within +/- 3 of zero which should contain 99% of all data points so this assumption is also fulfilled.


# h) Model means  
Use this section to extract model means according to your decision of the ANOVA table effects.

## Extract model means
```{r}
#| echo: true

#extract estimated marginal means K
crd_meansk <- emmeans::emmeans(crd_modk,
                                  ~krate_kgha)
```

# i) Pairwise comparisons  
Use this section to perform pair-wise comparison of the means extracted above.
```{r}
#| echo: true
#| warning: false
#| message: false

#compact letter display K
crd_cldk <- cld(crd_meansk, 
                   reversed=T, 
                   adjust="none",
               Letters=letters)

```

Make sure to reverse the order from high to low, use letters instead of numbers, and no adjustment.  

# g) Final plot(s)  
Produce final plot(s) to show your results.  
Make sure to include both **raw data** and **statistical model summary (i.e., letter separation)**.  

Be mindful of your plot to ensure you are creating it in an intuitive way for your audience in relation to interpreting the letter separation structure you used.  

In class, we did not have time to make it publication-ready (e.g., a plot looking professional and ready to be included in a manuscript).

Here, make sure you deliver final plot(s) that is/are publication ready.  

Make sure to provide an interpretation for the plot(s) created, including which treatment levels were significantly higher/lower.

```{r}
#| warning: false
#| message: false
#| echo: false

#Create dataframe from cld and wrangle for plotting
crd_cld_selected <- crd_cldk|>
  as.data.frame() |>
  mutate(
    letter = trimws(.group)
  )

#Final plot
  ggplot()+
  geom_boxplot(data = crd_dfw,
               aes(x = krate_kgha, y = yield_kgha,
                   fill = krate_kgha), color = "black",
               alpha = 0.6, lwd = 0.6)+
    geom_jitter(data = crd_dfw,
                aes(x = krate_kgha, y = yield_kgha,
                    fill = krate_kgha), alpha = 0.5,
                width = 0.3, shape = 21, size = 2)+
    geom_label(data = crd_cld_selected,
             aes(x = krate_kgha, y = emmean,
                 label = letter,vjust = -0.15),
             label.size = NA, size = 6,
                 alpha = 0)+
    scale_y_continuous(limits = c(600,7500))+
    theme_bw()+
    theme(
      panel.spacing.x = unit(4, "lines"),
      panel.background = element_rect(
        fill = 'lightgrey'),
      strip.background = element_rect(
        fill = "grey27"),
      strip.text = element_text(
        size = 14,
        face = "bold",
        color = "white"),
      axis.title.y = element_text(
        size = 16,
        face = "bold",
        margin = margin(r = 25)),
      axis.title.x = element_text(
        size = 16,
        face = "bold",
        margin = margin(t = 25)),
      axis.text.y = element_text(
        margin = margin(t = 5),
        size = 10,
        face = "bold"),
      axis.text.x = element_text(
        margin = margin(t = 5),
        size = 10,
        face = "bold"),
      legend.position = "none")+
   ylab("Yield (kg/ha)")+
   xlab("K application rate (kg/ha)")+
   scale_fill_npg()+
   scale_color_npg()

```
  - The final plot shows us that there is a significant difference in yield between 0 and 30 kg/ha of K as well as between 0 and 60 kg/ha of K. There is no significant difference in yield between K applications of 30 and 60 kg/ha. Since there is no effect on yield from N application nor any interaction effects when applying K and N,  I would recommend that the grower should focus only on K application and apply at a rate of 30 kg/ha.


# Submitting your work  
Once you have developed all the code and answers, make sure to Render this quarto file.  

**Notes on rendering**:  

- Make sure to render your work and inspect how the final html look like.  
- If it does not look professional for whatever reason, then fix the issue, re-render it, recheck.  
- Only send me your work once your html file looks professional.  
  - **DO NOT** delete the file's heading levels (# and ##). They set up the proper heading 1 and 2 levels, and I use them to guide my grading.  
  - If a given chunk is also outputting warnings or messages, inhibit this behavior by changing the chunk options `message` and `warning` to `FALSE` (I'll demo this in a moment).  
  
  - If, after rendered, 2 lines of text are connected and you wish to "break line" between them, add 2 extra spaces after the first one (I'lld demo this in a moment).  

After rendering, an .html file will be created on your `code` folder.  

Rename this file to `Assignment-03-crd-LASTNAME.html`.    

For ex., mine would be `Assignment-03-crd-Bastos.html`.

Send the **html** file to **lmbastos@uga.edu** by Feb 15th 11:59 pm.  
  




