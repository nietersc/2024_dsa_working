mutate(mod=factor(mod,
levels=c("lm_dayl.apr",
"lm_prp.oct",
"lm_2var.uncor",
"lm_2var.cor"))) %>%
filter(term != "mean_dayl.s_May") %>%
ggplot(aes(x=mod)) +
geom_pointrange(aes(y = estimate,
ymin = estimate - std.error,
ymax = estimate + std.error))
lm_dayl.apr %>%
bind_rows(lm_prp.oct,
lm_dayl.prcp,
lm_daylapr.daylmay) %>%
mutate(mod=factor(mod,
levels=c("lm_dayl.apr",
"lm_prp.oct",
"lm_2var.uncor",
"lm_2var.cor"))) %>%
filter(term != "mean_dayl.s_May") %>%
ggplot(aes(x=mod)) +
geom_pointrange(aes(y = estimate,
ymin = estimate - std.error,
ymax = estimate + std.error))+
facet_wrap(~term, scales = "free_y")
lm_dayl.apr <- lm(strength_gtex ~  mean_dayl.s_Apr,
data = weather) |>
broom::tidy() |>
filter(!term == "(Intercept)") |>
mutate(mod = "lm_dayl.s_apr")
lm_prp.oct <- lm(strength_gtex ~ sum_prcp.mm_Oct,
data = weather) %>%
tidy() %>%
filter(term!="(Intercept)") %>%
mutate(mod="lm_prp.oct")
lm_dayl.prcp <- lm(strength_gtex ~ mean_dayl.s_Apr +
sum_prcp.mm_Oct,
data = weather) %>%
tidy() %>%
filter(term != "(Intercept)") %>%
mutate(mod = "lm_2var.uncor")
lm_daylapr.daylmay <- lm(strength_gtex ~ mean_dayl.s_Apr +
mean_dayl.s_May,
data = weather) %>%
tidy() %>%
filter(term!="(Intercept)") %>%
mutate(mod="lm_2var.cor")
lm_dayl.apr %>%
bind_rows(lm_prp.oct,
lm_dayl.prcp,
lm_daylapr.daylmay) %>%
mutate(mod=factor(mod,
levels=c("lm_dayl.apr",
"lm_prp.oct",
"lm_2var.uncor",
"lm_2var.cor"))) %>%
filter(term != "mean_dayl.s_May") %>%
ggplot(aes(x=mod)) +
geom_pointrange(aes(y = estimate,
ymin = estimate - std.error,
ymax = estimate + std.error))+
facet_wrap(~term, scales = "free_y")
lm_dayl.apr %>%
bind_rows(lm_prp.oct,
lm_dayl.prcp,
lm_daylapr.daylmay) %>%
mutate(mod=factor(mod,
levels=c("lm_dayl.apr",
"lm_prp.oct",
"lm_2var.uncor",
"lm_2var.cor"))) %>%
filter(term != "mean_dayl.s_May") %>%
ggplot(aes(x=mod)) +
geom_pointrange(aes(y = estimate,
ymin = estimate - std.error,
ymax = estimate + std.error))+
facet_wrap(~term, scales = "free_y")+
scael_x_discrete(guide = guide_axis(n.dodge = 2))
lm_dayl.apr %>%
bind_rows(lm_prp.oct,
lm_dayl.prcp,
lm_daylapr.daylmay) %>%
mutate(mod=factor(mod,
levels=c("lm_dayl.apr",
"lm_prp.oct",
"lm_2var.uncor",
"lm_2var.cor"))) %>%
filter(term != "mean_dayl.s_May") %>%
ggplot(aes(x=mod)) +
geom_pointrange(aes(y = estimate,
ymin = estimate - std.error,
ymax = estimate + std.error))+
facet_wrap(~term, scales = "free_y")+
scale_x_discrete(guide = guide_axis(n.dodge = 2))
lm_dayl.apr %>%
bind_rows(lm_prp.oct,
lm_dayl.prcp,
lm_daylapr.daylmay) %>%
mutate(mod=factor(mod,
levels=c("lm_dayl.apr",
"lm_prp.oct",
"lm_2var.uncor",
"lm_2var.cor"))) %>%
filter(term != "mean_dayl.s_May")
lm_dayl.apr %>%
bind_rows(lm_prp.oct,
lm_dayl.prcp,
lm_daylapr.daylmay) %>%
mutate(mod=factor(mod,
levels=c("lm_dayl.apr",
"lm_prp.oct",
"lm_2var.uncor",
"lm_2var.cor"))) %>%
drop_na()|>
filter(term != "mean_dayl.s_May")
lm_dayl.apr %>%
bind_rows(lm_prp.oct,
lm_dayl.prcp,
lm_daylapr.daylmay) %>%
mutate(mod=factor(mod,
levels=c("lm_dayl.apr",
"lm_prp.oct",
"lm_2var.uncor",
"lm_2var.cor"))) %>%
drop_na()|>
filter(term != "mean_dayl.s_May") |>
ggplot(aes(x=mod)) +
geom_pointrange(aes(y = estimate,
ymin = estimate - std.error,
ymax = estimate + std.error))+
facet_wrap(~term, scales = "free_y")+
scale_x_discrete(guide = guide_axis(n.dodge = 2))
lm_dayl.apr %>%
bind_rows(lm_prp.oct,
lm_dayl.prcp,
lm_daylapr.daylmay) %>%
mutate(mod=factor(mod,
levels=c("lm_dayl.apr",
"lm_prp.oct",
"lm_2var.uncor",
"lm_2var.cor"))) %>%
filter(term != "mean_dayl.s_May") |>
ggplot(aes(x=mod)) +
geom_pointrange(aes(y = estimate,
ymin = estimate - std.error,
ymax = estimate + std.error))+
facet_wrap(~term, scales = "free_y")+
scale_x_discrete(guide = guide_axis(n.dodge = 2))
test <- lm_dayl.apr %>%
bind_rows(lm_prp.oct,
lm_dayl.prcp,
lm_daylapr.daylmay) %>%
mutate(mod=factor(mod,
levels=c("lm_dayl.apr",
"lm_prp.oct",
"lm_2var.uncor",
"lm_2var.cor"))) %>%
filter(term != "mean_dayl.s_May")
View(test)
lm_daylapr.daylmay <- lm(strength_gtex ~ mean_dayl.s_Apr +
mean_dayl.s_May,
data = weather) %>%
tidy() %>%
filter(term!="(Intercept)") %>%
mutate(mod="lm_2var.cor")
View(lm_daylapr.daylmay)
test <- lm_dayl.apr %>%
bind_rows(lm_prp.oct,
lm_dayl.prcp,
lm_daylapr.daylmay)
test <- lm_dayl.apr %>%
bind_rows(lm_prp.oct,
lm_dayl.prcp,
lm_daylapr.daylmay)|>
# mutate(mod=factor(mod,
#                   levels=c("lm_dayl.apr",
#                            "lm_prp.oct",
#                            "lm_2var.uncor",
#                            "lm_2var.cor"))) %>%
filter(term != "mean_dayl.s_May")
test <- lm_dayl.apr %>%
bind_rows(lm_prp.oct,
lm_dayl.prcp,
lm_daylapr.daylmay)|>
# mutate(mod=factor(mod,
#                   levels=c("lm_dayl.apr",
#                            "lm_prp.oct",
#                            "lm_2var.uncor",
#                            "lm_2var.cor"))) %>%
filter(term != "mean_dayl.s_May") |>
ggplot(aes(x=mod)) +
geom_pointrange(aes(y = estimate,
ymin = estimate - std.error,
ymax = estimate + std.error))+
facet_wrap(~term, scales = "free_y")+
scale_x_discrete(guide = guide_axis(n.dodge = 2))
lm_dayl.apr %>%
bind_rows(lm_prp.oct,
lm_dayl.prcp,
lm_daylapr.daylmay)|>
# mutate(mod=factor(mod,
#                   levels=c("lm_dayl.apr",
#                            "lm_prp.oct",
#                            "lm_2var.uncor",
#                            "lm_2var.cor"))) %>%
filter(term != "mean_dayl.s_May") |>
ggplot(aes(x=mod)) +
geom_pointrange(aes(y = estimate,
ymin = estimate - std.error,
ymax = estimate + std.error))+
facet_wrap(~term, scales = "free_y")+
scale_x_discrete(guide = guide_axis(n.dodge = 2))
# Uncorrelated
lm(strength_gtex ~ mean_dayl.s_Apr +
sum_prcp.mm_Oct,
data = weather) |>
vif()
# Correlated
lm(strength_gtex ~ mean_dayl.s_Apr +
mean_dayl.s_May,
data = weather) %>%
vif()
# Chunk 1
#| message: false
#| warning: false
#install.packages("ggcorrplot")
#install.packages("factoextra")
#install.packages("ggpmisc")
library(tidyverse)
library(ggcorrplot)
library(broom)
library(car)
library(factoextra)
library(ggpmisc)
# Chunk 2
weather <- read_csv("data/weather_monthsum.csv",
show_col_types = F)
weather
# Chunk 1
#| message: false
#| warning: false
#install.packages("ggcorrplot")
#install.packages("factoextra")
#install.packages("ggpmisc")
library(tidyverse)
library(ggcorrplot)
library(broom)
library(car)
library(factoextra)
library(ggpmisc)
# Chunk 2
weather <- read_csv("data/weather_monthsum.csv",
show_col_types = F)
weather
# Chunk 3: correlation matrix p-values
# Estimating significance matrix
p.mat <- weather |>
dplyr::select(-year,-site)|>
ggcorrplot::cor_pmat()
p.mat
# Chunk 4: correlation matrix plot
weather %>%
dplyr::select(-year, -site) %>%
cor() %>%
ggcorrplot(hc.order = TRUE,
digits = 1,
type = "lower",
p.mat = p.mat,
sig.level = 0.05,
insig = "blank",
lab = TRUE)
ggsave("output/corrmat.png",
height = 25,
width = 22,
bg = "white")
# Chunk 5: highest correlations
high_corr <- weather %>%
dplyr::select(-year, -site) %>%
cor() %>% # calculates r (-1 to 1)
as.data.frame() %>%
rownames_to_column() %>%
pivot_longer(cols = -rowname) %>%
filter(abs(value) > .85 & value != 1) %>%
arrange(desc(value)) %>%
distinct(value, .keep_all = T)
# Chunk 6: lowest correlations
low_corr <- weather %>%
dplyr::select(-year, -site) %>%
cor() %>% # calculates r (-1 to 1)
as.data.frame() %>%
rownames_to_column() %>%
pivot_longer(cols = -rowname) %>%
filter(abs(value) < .05 & value != 1) %>%
arrange(abs(value)) %>%
distinct(value, .keep_all = T)
# Chunk 7: r2
weather %>%
dplyr::select(-site, -year) %>%
pivot_longer(cols=-strength_gtex) %>%
group_by(name) %>%
nest() %>%
mutate(r2 = map_dbl(data,
~lm(strength_gtex ~ value,
data = .x) %>%
glance(.) %>%
pull(r.squared)
)) %>%
arrange(desc(r2))
# Chunk 8: r2 plot
weather %>%
dplyr::select(-site, -year) %>%
pivot_longer(cols=-strength_gtex) %>%
group_by(name) %>%
nest() %>%
mutate(r2 = map_dbl(data,
~lm(strength_gtex ~ value,
data = .x) %>%
glance(.) %>%
pull(r.squared)
)) %>%
arrange(desc(r2)) %>%
ungroup() %>%
slice(1:6) %>%
unnest(data) %>%
ggplot(aes(x = value,
y = strength_gtex))+
geom_point(shape = 21,
alpha = .7,
fill = "purple")+
geom_smooth(method = "lm",
se = F,
color = "black",
size = 1)+
facet_wrap(~name,
scales = "free_x",
ncol=2)
weather %>%
ggplot(aes(x = mean_dayl.s_Apr,
y = sum_prcp.mm_Oct)) +
geom_point() +
geom_smooth(method="lm") +
stat_correlation()
weather_n <- weather |>
dplyr::select(-year:strength_gtex)
View(weather_n)
weather_n <- weather |>
dplyr::select(-c(year:strength_gtex))
knitr::include_graphics("https://miro.medium.com/v2/resize:fit:1200/1*V4H3Cu8qGr_90WANKSO9BA.gif")
knitr::include_graphics("https://miro.medium.com/v2/resize:fit:1200/1*V4H3Cu8qGr_90WANKSO9BA.gif")
library(knitr)
knitr::include_graphics("https://miro.medium.com/v2/resize:fit:1200/1*V4H3Cu8qGr_90WANKSO9BA.gif")
knitr::include_graphics("https://miro.medium.com/v2/resize:fit:1200/1*V4H3Cu8qGr_90WANKSO9BA.gif")
mod_pca <- prcomp(weather_n, scale. = T)
summary(mod_pca)
factoextra::fviz_eig(mod_pca)
factoextra::fviz_eig(mod_pca,
addlabels = T)
mod_pca |>
factoextra::get_eig()
mod_pca |>
factoextra::get_eig()|>
mutate(
pc = 1:nrow(.))|>
ggplot(aes(x = pc,
y = cumulative.variance.percent))+
geom_bar(stat = "identity")
mod_pca |>
factoextra::get_eig()|>
mutate(
pc = 1:nrow())|>
ggplot(aes(x = pc,
y = cumulative.variance.percent))+
geom_bar(stat = "identity")
mod_pca |>
factoextra::get_eig()|>
mutate(
pc = 1:nrow(.))|>
ggplot(aes(x = pc,
y = cumulative.variance.percent))+
geom_bar(stat = "identity")
mod_pca |>
factoextra::get_eig()|>
mutate(
pc = row_number())|>
ggplot(aes(x = pc,
y = cumulative.variance.percent))+
geom_bar(stat = "identity")
mod_pca |>
factoextra::get_eig()|>
mutate(
pc = row_number())|>
ggplot(aes(x = pc,
y = cumulative.variance.percent))+
geom_bar(stat = "identity")+
geom_hline(yintercept = 70)
mod_pca |>
factoextra::get_eig()|>
mutate(
pc = row_number())|>
ggplot(aes(x = pc,
y = cumulative.variance.percent))+
geom_bar(stat = "identity")+
geom_hline(yintercept = 70, color = "green")
mod_pca$rotation %>%
as.data.frame() %>%
rownames_to_column(var = "var") %>%
ggplot(aes(x = reorder(var,desc(PC1)),
y = PC1))+
geom_bar(stat = "identity",
aes(fill = PC1),
show.legend = F)+
scale_fill_gradient(low = "red", high = "blue")+
theme(axis.text.x = element_text(angle = 45,
hjust = 1))
fviz_contrib(mod_pca,
choice = "var",
axes = 1)
fviz_pca_var(mod_pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
fviz_pca_var(mod_pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,  # Avoid text overlapping
select.var = list(contrib = 5)
)
fviz_pca_var(mod_pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,  # Avoid text overlapping
select.var = list(contrib = 10)
)
fviz_pca_var(mod_pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,  # Avoid text overlapping
select.var = list(contrib = 20)
)
fviz_pca_var(mod_pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,  # Avoid text overlapping
select.var = list(contrib = 15)
)
fviz_pca_var(mod_pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,  # Avoid text overlapping
select.var = list(contrib = 8)
)
fviz_pca_ind(mod_pca,
label = F)
fviz_pca_ind(mod_pca,
label = T)
fviz_pca_ind(mod_pca,
label = T)
fviz_pca_ind(mod_pca,
label = F)
# Extract first 4 PCs scores
pca_scores <- mod_pca$x
# Extract first 4 PCs scores
pca_scores <- mod_pca$x|>
as.data.frame()
View(pca_scores)
# Extract first 4 PCs scores
pca_scores <- mod_pca$x|>
as.data.frame()|>
dplyr::select(PC1:PC4)
# Adding PCs 1-4 scores to original data set
weather_postpca <- weather |>
bind_cols(pca_scores)
View(weather_postpca)
lm_pca <- lm(strength_gtex ~ PC1+PC2+PC3+PC4,
data = weather_postpca)
# Summary
summary(lm_pca)
# Checking VIF
vif(lm_pca)
# Plotting strength vs PC1
ggplot(weather_postpca,
aes(x = PC1, y = strength_gtex))+
geom_point()
# Plotting strength vs PC1
ggplot(weather_postpca,
aes(x = PC2, y = strength_gtex))+
geom_point()
# Plotting strength vs PC1
ggplot(weather_postpca,
aes(x = PC2, y = strength_gtex))+
geom_point()+
geom_smooth(method = "lm")
# Plotting strength vs PC1
ggplot(weather_postpca,
aes(x = PC3, y = strength_gtex))+
geom_point()+
geom_smooth(method = "lm")
# Plotting strength vs PC1
ggplot(weather_postpca,
aes(x = PC1, y = strength_gtex))+
geom_point()+
geom_smooth(method = "lm")
ggplot(weather_postpca,
aes(x = PC2, y = strength_gtex))+
geom_point()+
geom_smooth(method = "lm")
# Plotting strength vs PC3
ggplot(weather_postpca,
aes(x = PC3, y = strength_gtex))+
geom_point()+
geom_smooth(method = "lm")
