# Chunk 1
#| message: false
#| warning: false
library(tidyverse) # for data wrangling and plotting
library(car) # for Anova function
library(lme4)
library(broom) # for model residuals extraction
library(emmeans) # for model mean extraction
library(multcomp) # for pairwise comparison letter display
library(nlme) # for repeated measure correlation structures
# Chunk 2
#| message: false
rm_rcbd_df <- read_csv("../data/wheat_nk_balkh_rm.csv",
show_col_types = FALSE) |>
mutate_at(vars(c(1:7)), as.factor) |>
mutate(fdap = factor(dap))
# Chunk 3
summary(rm_rcbd_df)
# Chunk 4
ggplot(rm_rcbd_df, aes(x = fdap,
y = yield_kgha)) +
geom_boxplot()+
facet_wrap(~trtname)+
geom_hline(yintercept = 5000, color = "green",
alpha = 0.5)
# Chunk 5
options(contrasts = c("contr.sum", "contr.poly"))
mod1_default_lmer <- lme4::lmer(data = rm_rcbd_df,
yield_kgha ~
krate_kgha*nrate_kgha*fdap +
(1|block/krate_kgha/nrate_kgha))
summary(mod1_default_lmer)
# Chunk 6
mod1_default <- nlme::lme(data = rm_rcbd_df,
yield_kgha ~ krate_kgha*nrate_kgha*fdap,
random = ~ 1 | block/krate_kgha/nrate_kgha)
summary(mod1_default)
#This model is currently exactly the same as the mod1_default model fit above
# Chunk 7
car::Anova(mod1_default, type = 3)
# Chunk 8
nlme::ACF(mod1_default, resType = "n") |>
plot(alpha = 0.01) #add 1% significance band to plot
#if autocorrelation crosses the band, meaning lag 1 and 2 show autocorrelation
# Chunk 9
mod2_cs <- nlme::lme(data = rm_rcbd_df,
yield_kgha ~ krate_kgha*nrate_kgha*fdap,
random = ~ 1 | block/krate_kgha/nrate_kgha,
correlation = corCompSymm(form = ~ dap))
#use numerical form in this case, interval distance must be considered as a numerical value
mod2_cs # Rho = 0.115
# Chunk 10
ACF(mod2_cs, resType = "n") |>
plot(alpha = 0.01)
#Here we see autocorrelation has been greatly reduced in this plot compared to default model of correlation structure
# Chunk 11
nlme::intervals(mod2_cs, which = "var-cov")
# Chunk 12
stats::anova(mod1_default,mod2_cs)
nlme::anova.lme(mod1_default,mod2_cs)
# Chunk 13
mod3_gen <- nlme::lme(
yield_kgha ~ krate_kgha*nrate_kgha*fdap,
random = ~ 1|block/krate_kgha/nrate_kgha,
correlation = corSymm(),
data = rm_rcbd_df)
mod3_gen
# Chunk 14
ACF(mod3_gen, resType = "n") |>
plot(alpha = 0.01)
# Chunk 15
intervals(mod3_gen, which = "var-cov")
intervals(mod3_gen, which = "var-cov")
intervals(mod3_gen, which = "var-cov")
intervals(mod3_gen, which = "fixed")
# Chunk 1
#| message: false
#| warning: false
library(tidyverse) # for data wrangling and plotting
library(car) # for Anova function
library(lme4)
library(broom) # for model residuals extraction
library(emmeans) # for model mean extraction
library(multcomp) # for pairwise comparison letter display
library(nlme) # for repeated measure correlation structures
# Chunk 2
#| message: false
rm_rcbd_df <- read_csv("../data/wheat_nk_balkh_rm.csv",
show_col_types = FALSE) |>
mutate_at(vars(c(1:7)), as.factor) |>
mutate(fdap = factor(dap))
# Chunk 3
summary(rm_rcbd_df)
# Chunk 4
ggplot(rm_rcbd_df, aes(x = fdap,
y = yield_kgha)) +
geom_boxplot()+
facet_wrap(~trtname)+
geom_hline(yintercept = 5000, color = "green",
alpha = 0.5)
# Chunk 5
options(contrasts = c("contr.sum", "contr.poly"))
mod1_default_lmer <- lme4::lmer(data = rm_rcbd_df,
yield_kgha ~
krate_kgha*nrate_kgha*fdap +
(1|block/krate_kgha/nrate_kgha))
summary(mod1_default_lmer)
# Chunk 6
mod1_default <- nlme::lme(data = rm_rcbd_df,
yield_kgha ~ krate_kgha*nrate_kgha*fdap,
random = ~ 1 | block/krate_kgha/nrate_kgha)
summary(mod1_default)
#This model is currently exactly the same as the mod1_default model fit above
# Chunk 7
car::Anova(mod1_default, type = 3)
# Chunk 8
nlme::ACF(mod1_default, resType = "n") |>
plot(alpha = 0.01) #add 1% significance band to plot
#if autocorrelation crosses the band, meaning lag 1 and 2 show autocorrelation
# Chunk 9
mod2_cs <- nlme::lme(data = rm_rcbd_df,
yield_kgha ~ krate_kgha*nrate_kgha*fdap,
random = ~ 1 | block/krate_kgha/nrate_kgha,
correlation = corCompSymm(form = ~ dap))
#use numerical form in this case, interval distance must be considered as a numerical value
mod2_cs # Rho = 0.115
# Chunk 10
ACF(mod2_cs, resType = "n") |>
plot(alpha = 0.01)
#Here we see autocorrelation has been greatly reduced in this plot compared to default model of correlation structure
# Chunk 11
nlme::intervals(mod2_cs, which = "var-cov")
# Chunk 12
stats::anova(mod1_default,mod2_cs)
nlme::anova.lme(mod1_default,mod2_cs)
# Chunk 13
mod3_gen <- nlme::lme(
yield_kgha ~ krate_kgha*nrate_kgha*fdap,
random = ~ 1|block/krate_kgha/nrate_kgha,
correlation = corSymm(),
data = rm_rcbd_df)
mod3_gen
# Chunk 14
ACF(mod3_gen, resType = "n") |>
plot(alpha = 0.01)
# Chunk 15
intervals(mod3_gen, which = "fixed")
# Chunk 16
nlme::anova.lme(mod1_default,
mod2_cs,
mod3_gen)
mod4_ar1 <- lme(
yield_kgha ~ krate_kgha*nrate_kgha*fdap,
random = ~ 1|block/krate_kgha/nrate_kgha,
data = rm_rcbd_df)
mod4_ar1
nlme::anova.lme(mod1_default,
mod2_cs,
mod3_gen)
mod4_ar1 <- lme(
yield_kgha ~ krate_kgha*nrate_kgha*fdap,
random = ~ 1|block/krate_kgha/nrate_kgha,
data = rm_rcbd_df)
mod4_ar1
ACF(mod4_ar1, resType = "n") %>%
plot(alpha = 0.01)
mod4_ar1 <- nlme::lme(
yield_kgha ~ krate_kgha*nrate_kgha*fdap,
random = ~ 1|block/krate_kgha/nrate_kgha,
correlation = corAR1(from = ~ dap), #unequal intervals between daps use corCAR1 continuous autoregressive
data = rm_rcbd_df)
mod4_ar1 <- nlme::lme(
yield_kgha ~ krate_kgha*nrate_kgha*fdap,
random = ~ 1|block/krate_kgha/nrate_kgha,
correlation = corAR1(form = ~ dap), #unequal intervals between daps use corCAR1 continuous autoregressive
data = rm_rcbd_df)
mod4_ar1
ACF(mod4_ar1, resType = "n") %>%
plot(alpha = 0.01)
intervals(mod4_ar1, which = "var-cov")
anova(mod1_default,
mod2_cs, mod3_gen, mod4_ar1)
mod5_arma11 <- lme(
yield_kgha ~ krate_kgha*nrate_kgha*fdap,
random = ~ 1|block/krate_kgha/nrate_kgha,
correlation = corARMA(p = 1, q = 1), #q is # of timepoints going back, p is # of lags
data = rm_rcbd_df)
mod5_arma11
ACF(mod5_arma11, resType = "n") %>%
plot(alpha = 0.01)
intervals(mod5_arma11, which = "var-cov")
anova(mod1_default,
mod2_cs, mod3_gen, mod4_ar1, mod5_arma11)
mod6_exp <- lme(
yield_kgha ~ krate_kgha*nrate_kgha*fdap,
random = ~ 1|block/krate_kgha/nrate_kgha,
correlation = corExp(form = ~ dap),
data = rm_rcbd_df)
mod6_exp
ACF(mod6_exp, resType = "n") %>%
plot(alpha = 0.01)
ACF(mod6_exp, resType = "n") %>%
plot(alpha = 0.01)
Variogram(mod6_exp) %>%
plot()
Variogram(mod6_exp)
Variogram(mod6_exp) %>%
plot()
Variogram(mod6_exp) %>%
plot()
intervals(mod6_exp, which = "var-cov")
anova(mod1_default,
mod2_cs, mod3_gen, mod4_ar1, mod5_arma11,
mod6_exp)
mod7_gaus <- lme(
yield_kgha ~ krate_kgha*nrate_kgha*fdap,
random = ~ 1|block/krate_kgha/nrate_kgha,
correlation = corGaus(form ~ dap),
data = rm_rcbd_df)
mod7_gaus <- lme(
yield_kgha ~ krate_kgha*nrate_kgha*fdap,
random = ~ 1|block/krate_kgha/nrate_kgha,
correlation = corGaus(form ~ dap),
data = rm_rcbd_df)
mod7_gaus <- lme(
yield_kgha ~ krate_kgha*nrate_kgha*fdap,
random = ~ 1|block/krate_kgha/nrate_kgha,
correlation = corGaus(form = ~ dap),
data = rm_rcbd_df)
ACF(mod7_gaus, resType = "n") %>%
plot(alpha = 0.01)
Variogram(mod7_gaus) %>%
plot()
intervals(mod7_gaus, which = "var-cov")
anova(mod1_default,
mod2_cs, mod3_gen, mod4_ar1, mod5_arma11,
mod6_exp, mod7_gaus)
mod8_lin <- lme(
yield_kgha ~ krate_kgha*nrate_kgha*fdap,
random = ~ 1|block/krate_kgha/nrate_kgha,
correlation = corLin(form = ~ dap),
data = rm_rcbd_df)
mod8_lin
ACF(mod8_lin, resType = "n") %>%
plot(alpha = 0.01)
Variogram(mod8_lin) %>%
plot()
intervals(mod8_lin, which = "var-cov")
Variogram(mod8_lin) %>%
plot()
intervals(mod8_lin, which = "var-cov")
intervals(mod8_lin, which = "fixed")
intervals(mod8_lin, which = "var-cov")
anova(mod1_default,
mod2_cs, mod3_gen, mod4_ar1, mod5_arma11,
mod6_exp, mod7_gaus, mod8_lin)
mod9_rq <- lme(
yield_kgha ~ krate_kgha*nrate_kgha*fdap,
random = ~ 1|block/krate_kgha/nrate_kgha,
correlation = corRatio(form = ~ dap),
data = rm_rcbd_df)
mod9_rq
ACF(mod9_rq, resType = "n") %>%
plot(alpha = 0.01)
Variogram(mod9_rq) %>%
plot()
intervals(mod9_rq, which = "var-cov")
anova(mod1_default,
mod2_cs, mod3_gen, mod4_ar1, mod5_arma11,
mod6_exp, mod7_gaus, mod8_lin, mod9_rq)
mod10_sph <- lme(
yield_kgha ~ krate_kgha*nrate_kgha*fdap,
random = ~ 1|block/krate_kgha/nrate_kgha,
correlation = corSpher(form = ~ dap),
data = rm_rcbd_df)
mod10_sph
ACF(mod10_sph, resType = "n") %>%
plot(alpha = 0.01)
Variogram(mod10_sph) %>%
plot()
intervals(mod10_sph, which = "var-cov")
anova(mod1_default,
mod2_cs, mod3_gen, mod4_ar1, mod5_arma11,
mod6_exp, mod7_gaus, mod8_lin, mod9_rq, mod10_sph)
library(broom.mixed)
mod3_gen_resid <- augment(mod3_gen) %>%
mutate(.stdresid=resid(mod3_gen, type="pearson", scaled=T))
mod3_gen_resid
ranef(mod3_gen)[[1]] %>%
ggplot(aes(sample=`(Intercept)`))+
stat_qq(  shape = 21,
fill = "purple",
size = 3,
alpha = .7
)+
stat_qq_line()+
labs(x = "Theoretical quantile",
y = "Sample quantile")+
theme_bw()
ranef(mod3_gen)[[2]] %>%
ggplot(aes(sample=`(Intercept)`))+
stat_qq(  shape = 21,
fill = "purple",
size = 3,
alpha = .7
)+
stat_qq_line()+
labs(x = "Theoretical quantile",
y = "Sample quantile")+
theme_bw()
ggplot(mod3_gen_resid, aes(x=.fitted, y=.stdresid))+
geom_hline(yintercept = 0, color="red")+
geom_point(shape = 21,
fill = "purple",
size = 3,
alpha = .7)+
geom_smooth()+
geom_hline(yintercept = c(-3,3), color = "red")+
theme_bw()
anova(mod1_default,
mod2_cs, mod3_gen, mod4_ar1, mod5_arma11,
mod6_exp, mod7_gaus, mod8_lin, mod9_rq, mod10_sph)
anova(mod1_default,
mod2_cs, mod3_gen, mod4_ar1, mod5_arma11,
mod6_exp, mod7_gaus, mod8_lin, mod9_rq, mod10_sph) |>
dplyr::rownames_to_column(var = "Model_Name")
anova(mod1_default,
mod2_cs, mod3_gen, mod4_ar1, mod5_arma11,
mod6_exp, mod7_gaus, mod8_lin, mod9_rq, mod10_sph) |>
rownames_to_column(var = "Model_Name")
output <- anova(mod1_default,
mod2_cs, mod3_gen, mod4_ar1, mod5_arma11,
mod6_exp, mod7_gaus, mod8_lin, mod9_rq, mod10_sph) |>
rownames_to_column(var = "Model_Name")
View(output)
output <- anova(mod1_default,
mod2_cs, mod3_gen, mod4_ar1, mod5_arma11,
mod6_exp, mod7_gaus, mod8_lin, mod9_rq, mod10_sph) |>
tibble::rownames_to_column(var = "Model_Name")
output <- anova(mod1_default,
mod2_cs, mod3_gen, mod4_ar1, mod5_arma11,
mod6_exp, mod7_gaus, mod8_lin, mod9_rq, mod10_sph) |>
tibble::rownames_to_column(var = "Model_Name") |>
dplyr::filter(min(AIC))
output <- anova(mod1_default,
mod2_cs, mod3_gen, mod4_ar1, mod5_arma11,
mod6_exp, mod7_gaus, mod8_lin, mod9_rq, mod10_sph) |>
tibble::rownames_to_column(var = "Model_Name") |>
dplyr::filter(AIC == min(AIC))
output <- anova(mod1_default,
mod2_cs, mod3_gen, mod4_ar1, mod5_arma11,
mod6_exp, mod7_gaus, mod8_lin, mod9_rq, mod10_sph) |>
tibble::rownames_to_column(var = "model_name") |>
janitor::clean_names() |>
dplyr::filter(AIC == min(AIC))
output <- anova(mod1_default,
mod2_cs, mod3_gen, mod4_ar1, mod5_arma11,
mod6_exp, mod7_gaus, mod8_lin, mod9_rq, mod10_sph) |>
tibble::rownames_to_column(var = "model_name") |>
janitor::clean_names() |>
dplyr::filter(aic == min(aic))
output <- anova(mod1_default,
mod2_cs, mod3_gen, mod4_ar1, mod5_arma11,
mod6_exp, mod7_gaus, mod8_lin, mod9_rq, mod10_sph) |>
tibble::rownames_to_column(var = "model_name") |>
janitor::clean_names() |>
dplyr::select(model_name,model,df,aic,bic) |>
dplyr::filter(aic == min(aic))
output <- anova(mod1_default,
mod2_cs, mod3_gen, mod4_ar1, mod5_arma11,
mod6_exp, mod7_gaus, mod8_lin, mod9_rq, mod10_sph) |>
tibble::rownames_to_column(var = "model_name") |>
janitor::clean_names() |>
dplyr::select(model_name,model,df,aic,bic) |>
dplyr::filter(aic == min(aic),
bic == min(bic))
output <- anova(mod1_default,
mod2_cs, mod3_gen, mod4_ar1, mod5_arma11,
mod6_exp, mod7_gaus, mod8_lin, mod9_rq, mod10_sph) |>
tibble::rownames_to_column(var = "model_name") |>
janitor::clean_names() |>
dplyr::select(model_name,model,df,aic,bic) |>
dplyr::filter(aic == min(aic) |
bic == min(bic))
library(broom.mixed)
mod3_gen_resid <- augment(mod3_gen) %>%
mutate(.stdresid=resid(mod3_gen, type="pearson", scaled=T))
mod3_gen_resid
ranef(mod3_gen)[[1]] %>%
ggplot(aes(sample=`(Intercept)`))+
stat_qq(  shape = 21,
fill = "purple",
size = 3,
alpha = .7
)+
stat_qq_line()+
labs(x = "Theoretical quantile",
y = "Sample quantile")+
theme_bw()
ranef(mod3_gen)[[2]] %>%
ggplot(aes(sample=`(Intercept)`))+
stat_qq(  shape = 21,
fill = "purple",
size = 3,
alpha = .7
)+
stat_qq_line()+
labs(x = "Theoretical quantile",
y = "Sample quantile")+
theme_bw()
ranef(mod3_gen)[[3]] %>%
ggplot(aes(sample=`(Intercept)`))+
stat_qq(  shape = 21,
fill = "purple",
size = 3,
alpha = .7
)+
stat_qq_line()+
labs(x = "Theoretical quantile",
y = "Sample quantile")+
theme_bw()
ggplot(mod3_gen_resid, aes(x=.fitted, y=.stdresid))+
geom_hline(yintercept = 0, color="red")+
geom_point(shape = 21,
fill = "purple",
size = 3,
alpha = .7)+
geom_smooth()+
geom_hline(yintercept = c(-3,3), color = "red")+
theme_bw()
ggplot(mod3_gen_resid, aes(sample=.stdresid))+
stat_qq(  shape = 21,
fill = "purple",
size = 3,
alpha = .7
)+
stat_qq_line()+
labs(x = "Theoretical quantile",
y = "Sample quantile")+
theme_bw()
Anova(mod3_gen, type = 3)
rm_rcbd_cld_kndap <- emmeans(mod3_gen, ~fdap|krate_kgha:nrate_kgha) %>%
cld(reversed = T,
Letters = letters,
adjust = "none"
) %>%
as.data.frame() %>%
mutate(letter = trimws(.group)) %>%
mutate(trtname = paste0(nrate_kgha,"+",krate_kgha))
rm_rcbd_cld_kndap
Anova(mod3_gen, type = 3)
ggplot(mapping = aes(fill = fdap))+
# Raw data and boxplots
geom_boxplot(data = rm_rcbd_df,
aes(x = fdap, y = yield_kgha),
alpha = .8) +
geom_jitter(data = rm_rcbd_df,
aes(x = fdap, y = yield_kgha),
shape = 21,
size = 3,
alpha = .6) +
# Adding letters
geom_label(data = rm_rcbd_cld_kndap,
aes(x = fdap, y = emmean, label = letter),
fill = "white") +
labs(x = "Harvest, days after planting",
y = "Yield (kg/ha)") +
scale_fill_viridis_d() +
facet_grid(.~trtname) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "none")
Anova(mod1_default, type = 3)
rm_rcbd_cld_kndap_wrong <- emmeans(mod1_default,
~fdap|krate_kgha:nrate_kgha) %>%
cld(reversed = T,
Letters = letters,
adjust = "none"
) %>%
as.data.frame() %>%
mutate(letter = trimws(.group)) %>%
mutate(trtname = paste0(nrate_kgha,"+",krate_kgha))
ggplot(mapping = aes(fill = fdap))+
# Raw data and boxplots
geom_boxplot(data = rm_rcbd_df,
aes(x = fdap, y = yield_kgha),
alpha = .8) +
geom_jitter(data = rm_rcbd_df,
aes(x = fdap, y = yield_kgha),
shape = 21,
size = 3,
alpha = .6) +
# Adding letters
geom_label(data = rm_rcbd_cld_kndap_wrong,
aes(x = fdap, y = emmean, label = letter),
fill = "white") +
labs(x = "Harvest, days after planting",
y = "Yield (kg/ha)") +
scale_fill_viridis_d() +
facet_grid(.~trtname) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
legend.position = "none")
